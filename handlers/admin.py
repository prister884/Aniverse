from config import BOT_TOKEN
from rate_limit import rate_limit
from db import db
from dp import dp, bot
from aiogram import types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import subprocess
import os
import sys
from keyboards.main_keyboard import get_main_keyboard

# commands=["admin","add_admin", "remove_admin", "ban", "unban",  "promote", "admins", 
# "users", "stats", "promo", "add_promo", "stop", "update", "events", "add_event",
# "give_spin", "give_pass", "self_spin", "self_pass"]


@rate_limit(0.5)
async def admin_commands(message: types.Message):

    user_id = message.from_user.id
    user_data = db.users.find_one({"user_id": user_id})
    admin_data = db.admins.find_one({"user_id": user_id})

    if not admin_data:
        await message.answer(
            f"üö´ [{nickname}](https://t.me/{username}), –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞.",
            parse_mode="Markdown",
            disable_web_page_preview=True
        )
    
    if not user_data:
        await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.")
        return
    
    admin_data = db.admins.find_one({"user_id": user_id})
    admin_role = admin_data.get("role", "limited")
    parts = message.text.strip().lower().split(" ")
    nickname = user_data.get("nickname", "–ì–æ—Å—Ç—å")
    username = user_data.get("username")

    if message.text.startswith("/admin"):
        admin_data = db.admins.find_one({"user_id": user_id})  # Fetch admin data
        admins = db.admins.find()  # Fetch list of admins

        if not admin_data:
            await message.answer(
                f"üö´ [{nickname}](https://t.me/{username}), –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞.",
                parse_mode="Markdown",
                disable_web_page_preview=True
            )

        else:
            admin_role = admin_data.get("role")  # Get role after confirming admin_data exists
            keyboard = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)

            # Limited admin functionality
            if admin_role == "limited":
                keyboard.add(
                    KeyboardButton(text="üåÄ –í—ã–¥–∞—Ç—å –∫—Ä—É—Ç–∫–∏"),
                    KeyboardButton(text="üîë –í—ã–¥–∞—Ç—å –ø–∞—Å—Å"),
                    KeyboardButton(text="‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü—É")
                )
                keyboard.add(
                    KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
                    KeyboardButton(text="üçÉ –£–≤–æ–ª–∏—Ç—å—Å—è")
                )

                await message.answer(
                    f"üëã –ü—Ä–∏–≤–µ—Ç, [{nickname}](https://t.me/{username}), —Ç—ã —è–≤–ª—è–µ—à—å—Å—è –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.\n\n"
                    f"‚úÖ –¢–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n\n"
                    f"üîπ –í—ã–¥–∞—Ç—å –∫—Ä—É—Ç–∫–∏ - /give_spin <user_id> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>\n"
                    f"üîπ –í—ã–¥–∞—Ç—å –ø–∞—Å—Å - /give_pass <user_id> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π>\n\n"
                    f"‚ùå –¢–µ–±–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n\n"
                    f"üîπ –í—ã–¥–∞—Ç—å —Å–µ–±–µ –∫—Ä—É—Ç–∫–∏\n"
                    f"üîπ –í—ã–¥–∞—Ç—å —Å–µ–±–µ –ø–∞—Å—Å\n"
                    f"üîπ –ü—Ä–æ–º–æ–∫–æ–¥—ã\n"
                    f"üîπ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏\n"
                    f"üîπ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã - /admins\n"
                    f"üîπ –ò–≤–µ–Ω—Ç—ã (–º–∏—Ñ–∏—á–µ—Å–∫–∏–π –¥–µ–Ω—å, –±–æ—Å—Å, –Ω–æ–≤—ã–π —Å–µ–∑–æ–Ω, –ª–µ—Ç–Ω–∏–µ –∏ –∑–∏–º–Ω–∏–µ –∏–≤–µ–Ω—Ç—ã)\n\n"
                    f"üóí –¢—ã –º–æ–∂–µ—à—å —É–≤–æ–ª–∏—Ç—å—Å—è –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É, –∏–ª–∏ –Ω–∞–ø–∏—Å–∞–≤ –≤ —á–∞—Ç: \"`–£–≤–æ–ª–∏—Ç—å—Å—è`\"",
                    parse_mode="Markdown",
                    reply_markup=keyboard,
                    disable_web_page_preview=True
                )

            # Advanced admin functionality
            elif admin_role == "advanced":
                keyboard.add(
                    KeyboardButton(text="üåÄ –í—ã–¥–∞—Ç—å –∫—Ä—É—Ç–∫–∏"),
                    KeyboardButton(text="üîë –í—ã–¥–∞—Ç—å –ø–∞—Å—Å"),
                    KeyboardButton(text="‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü—É")
                )
                keyboard.add(KeyboardButton(text="üëÆ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã"))
                keyboard.add(
                    KeyboardButton(text="üí¨ –ü—Ä–æ–º–æ–∫–æ–¥—ã"),
                    KeyboardButton(text="üåÄ –í—ã–¥–∞—Ç—å —Å–µ–±–µ –∫—Ä—É—Ç–∫–∏"),
                    KeyboardButton(text="üîë –í—ã–¥–∞—Ç—å —Å–µ–±–µ –ø–∞—Å—Å")
                )
                keyboard.add(KeyboardButton(text="üòê –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"))
                keyboard.add(
                    KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
                    KeyboardButton(text="üçÉ –£–≤–æ–ª–∏—Ç—å—Å—è")
                )

                await message.answer(
                    f"üëã –ü—Ä–∏–≤–µ—Ç, [{nickname}](https://t.me/{username}), —Ç—ã —è–≤–ª—è–µ—à—å—Å—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.\n\n"
                    f"‚úÖ –¢–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n\n"
                    f"üîπ –í—ã–¥–∞—Ç—å —Å–µ–±–µ –∫—Ä—É—Ç–∫–∏ - /self_spin <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>\n"
                    f"üîπ –í—ã–¥–∞—Ç—å —Å–µ–±–µ –ø–∞—Å—Å - /self_pass <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π>\n"
                    f"üîπ –í—ã–¥–∞—Ç—å –∫—Ä—É—Ç–∫–∏ - /give_spin <user_id> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>\n"
                    f"üîπ –í—ã–¥–∞—Ç—å –ø–∞—Å—Å - /give_pass <user_id> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π>\n"
                    f"üîπ –ü—Ä–æ–º–æ–∫–æ–¥—ã - /promo\n"
                    f"üîπ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ - /users\n"
                    f"üîπ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã - /admins\n\n"
                    f"‚ùå –¢–µ–±–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n\n"
                    f"üîπ –ò–≤–µ–Ω—Ç—ã (–º–∏—Ñ–∏—á–µ—Å–∫–∏–π –¥–µ–Ω—å, –±–æ—Å—Å, –Ω–æ–≤—ã–π —Å–µ–∑–æ–Ω, –ª–µ—Ç–Ω–∏–µ –∏ –∑–∏–º–Ω–∏–µ –∏–≤–µ–Ω—Ç—ã)\n\n"
                    f"üóí –¢—ã –º–æ–∂–µ—à—å —É–≤–æ–ª–∏—Ç—å—Å—è –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É, –∏–ª–∏ –Ω–∞–ø–∏—Å–∞–≤ –≤ —á–∞—Ç: \"`–£–≤–æ–ª–∏—Ç—å—Å—è`\"",
                    parse_mode="Markdown",
                    reply_markup=keyboard,
                    disable_web_page_preview=True
                )


            # Owner admin functionality
            elif admin_role == "owner":
                keyboard.add(
                    KeyboardButton(text="üåÄ –í—ã–¥–∞—Ç—å –∫—Ä—É—Ç–∫–∏"),
                    KeyboardButton(text="üîë –í—ã–¥–∞—Ç—å –ø–∞—Å—Å")
                )
                keyboard.add(KeyboardButton(text="üëÆ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã"))
                keyboard.add(
                    KeyboardButton(text="üí¨ –ü—Ä–æ–º–æ–∫–æ–¥—ã"),
                    KeyboardButton(text="üåÄ –í—ã–¥–∞—Ç—å —Å–µ–±–µ –∫—Ä—É—Ç–∫–∏"),
                    KeyboardButton(text="üîë –í—ã–¥–∞—Ç—å —Å–µ–±–µ –ø–∞—Å—Å")
                )
                keyboard.add(KeyboardButton(text="üòê –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"))
                keyboard.add(
                    KeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å—Å—è"),
                    KeyboardButton(text="üî¥ –í—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞"),
                    KeyboardButton(text="üéÜ –ò–≤–µ–Ω—Ç—ã")
                )
                keyboard.add(
                    KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
                    KeyboardButton(text="üíπ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
                )

                await message.answer(
                    f"üëã –ü—Ä–∏–≤–µ—Ç, [{nickname}](https://t.me/{username}), —Ç—ã —è–≤–ª—è–µ—à—å—Å—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –±–æ—Ç–∞.\n\n"
                    f"‚úÖ –¢–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n\n"
                    f"üîπ –í—ã–¥–∞—Ç—å —Å–µ–±–µ –∫—Ä—É—Ç–∫–∏ - /self_spin <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>\n"
                    f"üîπ –í—ã–¥–∞—Ç—å —Å–µ–±–µ –ø–∞—Å—Å - /self_pass <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π>\n"
                    f"üîπ –í—ã–¥–∞—Ç—å –∫—Ä—É—Ç–∫–∏ - /give_spin <user_id> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>\n"
                    f"üîπ –í—ã–¥–∞—Ç—å –ø–∞—Å—Å - /give_pass <user_id> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π>\n"
                    f"üîπ –ü—Ä–æ–º–æ–∫–æ–¥—ã - /promo\n"
                    f"üîπ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ - /users\n"
                    f"üîπ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã - /admins\n"
                    f"üîπ –ò–≤–µ–Ω—Ç—ã - /events\n"
                    f"üîπ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - /stats\n"
                    f"üîπ –û–±–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞ - /update\n"
                    f"üîπ –í—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞ - /stop",
                    parse_mode="Markdown",
                    reply_markup=keyboard,
                    disable_web_page_preview=True
                )

    elif message.text.startswith("/add_admin"):

        if len(parts) < 3:
            await message.answer("‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /add_admin <user_id> <role>")
            return

        target_user_id = int(parts[1])
        target_user = db.users.find_one({"user_id":target_user_id})
        target_role = parts[2]
        target_nickname = target_user.get("nickname","–ì–æ—Å—Ç—å")
        target_username = target_user.get("username")
        if target_role not in ["limited", "advanced"]:
            await message.answer("‚ùå –†–æ–ª—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å `limited` –∏–ª–∏ `advanced`.")
            return

        if admin_role in ["owner", "advanced"]:
            target_user = db.users.find_one({"user_id": target_user_id})
            target_nickname = target_user.get("nickname","–ì–æ—Å—Ç—å")
            target_username = target_user.get("username")
            if not target_user:
                await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                return
            
            limit = "no_limit" if target_role != "limited" else 10000
            
            if target_role == "advanced":
                self_spins = 1000

            elif target_role == "limited":
                self_spins = 0

            db.admins.insert_one({"user_id": target_user_id, "role": target_role, "self_spins":self_spins, "spins":limit})
            await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [{target_nickname}](https://t.me/{target_username}) –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä \"{target_role}\".", parse_mode="Markdown",disable_web_page_preview=True)
            await bot.send_message(chat_id=target_user_id, text=f"‚úÖ [{target_nickname}](https://t.me/{target_username}), —Ç—ã —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —ç—Ç–æ–≥–æ –±–æ—Ç–∞. (–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å: {target_role})", parse_mode="Markdown",disable_web_page_preview=True)
        else:
            await message.answer("üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

    elif message.text.startswith("/remove_admin"):
        
        if len(parts) < 2:
            await message.answer("‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /remove_admin <user_id>")
            return

        target_user_id = int(parts[1])
        target_user = db.users.find_one({"user_id": target_user_id})
        target_role = db.admins.find_one({"user_id":target_user_id})
        target_nickname = target_user.get("nickname","–ì–æ—Å—Ç—å")
        target_username = target_user.get("username")

        if admin_role == "owner":

            target_user = db.users.find_one({"user_id": target_user_id})
            target_nickname = target_user.get("nickname","–ì–æ—Å—Ç—å")
            target_username = target_user.get("username")
            if not target_user:
                await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                return
            
            db.admins.find_one_and_delete({"user_id": target_user_id})
            await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [{target_nickname}](https://t.me/{target_username}) –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.", parse_mode="Markdown",disable_web_page_preview=True)
        
        elif admin_role == "advanced" and target_role not in ["owner", "limited"]:

            target_user = db.users.find_one({"user_id": target_user_id})
            target_nickname = target_user.get("nickname","–ì–æ—Å—Ç—å")
            target_username = target_user.get("username")

            if not target_user:
                await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                return
            
            db.admins.find_one_and_delete({"user_id": target_user_id})
            await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [{target_nickname}](https://t.me/{target_username}) –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.", parse_mode="Markdown",disable_web_page_preview=True)
            await bot.send_message(chat_id=target_user_id, text=f"[{target_nickname}](https://t.me/{target_username}), —Ç—ã –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—à—å—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞. üòî", parse_mode="Markdown",disable_web_page_preview=True)
        
        elif admin_role == "advanced" and target_role in ["owner", "advanced"]:

            await message.answer("‚ùå –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å —Ä–æ–ª—å—é \"owner\" –∏–ª–∏ \"advanced\".")

        else:

            await message.answer("üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

    elif message.text.startswith("/ban"):

        if len(parts) < 3:
            await message.answer("‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /ban <user_id> <–ø—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏>")
            return
        
        message.text.strip().lower().split(" ", maxsplit=3)
        target_user_id = int(parts[1])
        target_role = db.admins.find_one({"user_id":target_user_id})
        reason = parts[2]
        banned_user = db.banned.find_one({"user_id":target_user_id})

        if admin_role in ["advanced", "owner"]:

            target_user = db.users.find_one({"user_id": target_user_id})

            if not target_user:
                await message.answer(
                    f"üö´ –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: {target_user_id}",
                    parse_mode="Markdown",
                    disable_web_page_preview=True
                )

            if banned_user:
                await message.answer(
                    f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID: {target_user_id}, —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
                    parse_mode="Markdown",
                    disable_web_page_preview=True
                )

            else: 
                
                target_nickname = target_user.get("nickname","–ì–æ—Å—Ç—å")
                target_username = target_user.get("username")
    
                db.banned.insert_one(target_user)
                db.users.find_one_and_delete({"user_id": target_user_id})


                await message.answer("‚úÖ")
                await message.answer(
                    f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [{target_nickname}](https://t.me/{target_username}), –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω."
                    f"–ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {reason}",
                    parse_mode="Markdown",
                    disable_web_page_preview=True
                )

                await bot.send_message(
                    chat_id=target_user_id,
                    text=f"[{target_nickname}](https://t.me/{target_username}), –≤—ã –±—ã–ª–∏ –∑–∞–±—Ä–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ –±–æ—Ç–∞. \n–ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {reason}",
                    parse_mode="Markdown",
                    disable_web_page_preview=True
                )


    elif message.text.startswith("/update"):
        if admin_role in ["owner", "advanced"]:
            await message.answer("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.")
            try:
                result = subprocess.run(["git", "pull"], capture_output=True, text=True, check=True)
                git_output = result.stdout.strip() or "No output from Git."
                await message.answer(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã:\n`\n{git_output}\n`", parse_mode="Markdown")

                if git_output != "Already up to date.":
                    await message.answer("‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...")
                    os.execl(sys.executable, sys.executable, *sys.argv)
            except Exception as e:
                await message.answer(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞:\n{e}")
        else:
            await message.answer("üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

    elif message.text.startswith("/promote"):
        
        if len(parts) < 3:
            await message.answer("‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /promote <user_id> <role>")
            return
        
        target_user_id = int(parts[1])
        target_user = db.users.find_one({"user_id":target_user_id})
        target_nickname = target_user.get("nickname","–ì–æ—Å—Ç—å")
        target_username = target_user.get("username")
        new_role = parts[2]
        target_role = new_role

        if new_role not in ["limited", "advanced"]:
            await message.answer("‚ùå –†–æ–ª—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å `limited` –∏–ª–∏ `advanced`.")
            return

        if admin_role in ["owner", "advanced"]:

            target_user = db.users.find_one({"user_id": target_user_id})

            if not target_user:
                await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                return
            
            limit = "no_limit" if new_role != "limited" else "10000"

            if new_role == "advanced":
                self_spins = 1000

            elif new_role == "limited":
                self_spins = 500

            db.admins.update_one({"user_id": target_user_id}, {"$set": {"role": new_role, "spins": limit, "self_spins":self_spins}})
            
            await message.answer(f"‚úÖ –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [{target_nickname}](https://t.me/{target_username}) –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ \"{new_role}\".", parse_mode="Markdown",disable_web_page_preview=True)
            
            await bot.send_message(
                chat_id=target_user_id, 
                text=f"‚úÖ [{target_nickname}](https://t.me/{target_username}), —Ç–µ–±—è –ø–æ–≤—ã—Å–∏–ª–∏ –¥–æ {target_role}. (–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å: {target_role})",
                parse_mode="Markdown",
                disable_web_page_preview=True
            )
        
        else:
            await message.answer("üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
    
    elif message.text.startswith("/give_spin"):

        if len(parts) < 3:
            await message.answer("‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /give_spin <user_id> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>")
            return

        target_user_id = int(parts[1])
        target_user = db.users.find_one({"user_id":target_user_id})

        users_spin_chances = target_user.get("spin_chances", 0)
        target_nickname = target_user.get("nickname","–ì–æ—Å—Ç—å")
        target_username = target_user.get("username")

        spin_chances = int(parts[2])
        limit = admin_data.get("spins")

        if admin_role == "owner":
            db.users.update_one({"user_id":target_user_id},{"$set":{"spin_chances":users_spin_chances+spin_chances}})


            await message.answer("‚úÖ")
            await message.answer(
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é [{target_nickname}](https://t.me/{target_username}) —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ {spin_chances} –∫—Ä—É—Ç–æ–∫.\n",
                parse_mode="Markdown",
                disable_web_page_preview=True
            )

            await bot.send_message(chat_id=target_user_id, text=f"üÉè [{target_nickname}](https://t.me/{target_username}), –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –±–æ—Ç–∞ –≤—ã–¥–∞–ª–∏ —Ç–µ–±–µ {spin_chances} –∫—Ä—É—Ç–æ–∫.", parse_mode="Markdown", disable_web_page_preview = True)



        elif admin_role == "advanced":

            if target_user_id == user_id:
                await message.answer("‚ùå")
                await message.answer(
                    f"‚ùå [{nickname}](https://t.me/{username}), –Ω–µ–ª—å–∑—è –≤—ã–¥–∞–≤–∞—Ç—å –∫—Ä—É—Ç–∫–∏ —Å–µ–±–µ, –∏—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.\n\n"
                    f"üÉè –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/self_spin <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ> —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫—Ä—É—Ç–∫–∏ –¥–ª—è —Å–µ–±—è.\n",
                    parse_mode="Markdown",
                    disable_web_page_preview=True
                )

            else:

                db.users.update_one({"user_id":target_user_id},{"$set":{"spin_chances":users_spin_chances+spin_chances}})

                await message.answer("‚úÖ")
                await message.answer(
                    f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é [{target_nickname}](https://t.me/{target_username}) —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ {spin_chances} –∫—Ä—É—Ç–æ–∫.\n",
                    parse_mode="Markdown",
                    disable_web_page_preview=True
                )
                
                await bot.send_message(chat_id=target_user_id, text=f"üÉè [{target_nickname}](https://t.me/{target_username}), –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –±–æ—Ç–∞ –≤—ã–¥–∞–ª–∏ —Ç–µ–±–µ {spin_chances} –∫—Ä—É—Ç–æ–∫.", parse_mode="Markdown", disable_web_page_preview = True)


        elif admin_role == "limited":

            if target_user_id == user_id:
                await message.answer("‚ùå")
                await message.answer(
                    f"‚ùå [{nickname}](https://t.me/{username}), –Ω–µ–ª—å–∑—è –≤—ã–¥–∞–≤–∞—Ç—å –∫—Ä—É—Ç–∫–∏ —Å–µ–±–µ, –∏—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.\n\n"
                    f"üÉè –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/self_spin <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ> —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫—Ä—É—Ç–∫–∏ –¥–ª—è —Å–µ–±—è.\n",
                    parse_mode="Markdown",
                    disable_web_page_preview=True
                )
            
            else: 

                if limit - spin_chances >= 0:

                    db.admins.update_one({"user_id":user_id}, {"$set":{"spin":(limit-spin_chances)}})
                    db.users.update_one({"user_id":target_user_id},{"$set":{"spin_chances":users_spin_chances+spin_chances}})

                    await message.answer("‚úÖ")
                    await message.answer(
                        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é [{target_nickname}](https://t.me/{target_username}) —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ {spin_chances} –∫—Ä—É—Ç–æ–∫.\n"
                        f"üòâ –í–∞—à –æ—Å—Ç–∞–≤—à–∏–π—Å—è –ª–∏–º–∏—Ç: {limit-spin_chances}.",
                        parse_mode="Markdown",
                        disable_web_page_preview=True
                    )
    
                    await bot.send_message(chat_id=target_user_id, text=f"üÉè [{target_nickname}](https://t.me/{target_username}), –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –±–æ—Ç–∞ –≤—ã–¥–∞–ª–∏ —Ç–µ–±–µ {spin_chances} –∫—Ä—É—Ç–æ–∫.", parse_mode="Markdown", disable_web_page_preview = True)

                else:
                    await message.answer("‚ùå")
                    await message.answer(
                        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é [{target_nickname}](https://t.me/{target_username}) –Ω–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å {spin_chances} –∫—Ä—É—Ç–æ–∫.\n"
                        f"üòâ –í–∞—à –æ—Å—Ç–∞–≤—à–∏–π—Å—è –ª–∏–º–∏—Ç: {limit}.",
                        parse_mode="Markdown",
                        disable_web_page_preview=True
                    )
        
        else: 
            await message.answer("‚ùå")
            await message.answer(
                f"[{user_id}](https://t.me/{username}), –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `/give_spin <user_id> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>.\n",
                parse_mode="Markdown",
                disable_web_page_preview=True
            )

    elif message.text.startswith("/self_spin"):
        
        if len(parts) < 2:
            await message.answer("‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /self_spin <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>")
            return
        
        user_id = message.from_user.id
        user_data = db.users.find_one({"user_id":user_id})

        us_spin_chances = user_data.get("spin_chances",0)
        self_spins = admin_data.get("self_spins",0)

        spin_chances = int(parts[1])
        limit = admin_data.get("spins")

        if admin_role == "owner":
            db.users.update_one({"user_id":user_id},{"$set":{"spin_chances":us_spin_chances+spin_chances}})

            await message.answer("‚úÖ")
            await message.answer(
                f"‚úÖ –í—ã –≤—ã–¥–∞–ª–∏ —Å–µ–±–µ {spin_chances} –∫—Ä—É—Ç–æ–∫\n",
                parse_mode="Markdown"
            )


        elif admin_role in ["advanced"]:

            if self_spins>=spin_chances:

                db.users.update_one({"user_id":user_id},{"$set":{"spin_chances":spin_chances+spin_chances}})
                db.admins.update_one({"user_id":user_id},{"$set":{"self_spins":self_spins-spin_chances}})                

                await message.answer("‚úÖ")
                await message.answer(
                    f"‚úÖ –í—ã –≤—ã–¥–∞–ª–∏ —Å–µ–±–µ {spin_chances} –∫—Ä—É—Ç–æ–∫.\n\n"
                    f"üòâ –í–∞—à –æ—Å—Ç–∞–≤—à–∏–π—Å—è –ª–∏–º–∏—Ç: {self_spins-spin_chances}.",
                    parse_mode="Markdown"
                )

            else:

                await message.answer("‚ùå")
                await message.answer(
                    f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å –≤–∞–º {spin_chances} –∫—Ä—É—Ç–æ–∫, —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏–º–∏—Ç–∞.\n\n"
                    f"üòâ –í–∞—à –æ—Å—Ç–∞–≤—à–∏–π—Å—è –ª–∏–º–∏—Ç: {self_spins}.",
                    parse_mode="Markdown"
                )

        else: 
            await message.answer("‚ùå")
            await message.answer(
                f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å –≤–∞–º {spin_chances} –∫—Ä—É—Ç–æ–∫, —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏–º–∏—Ç–∞.\n\n"
                f"üòâ –í–∞—à –æ—Å—Ç–∞–≤—à–∏–π—Å—è –ª–∏–º–∏—Ç: {self_spins}.",
                parse_mode="Markdown"
            )
   
@rate_limit(0.5)
async def admin_message_handler(message: types.Message):
    user_id = message.from_user.id
    user_data = db.users.find_one({"user_id": user_id})
    admin_data = db.admins.find_one({"user_id": user_id})

    user_input = message.text.strip().lower()

    if not admin_data:
        await message.answer("üö´ –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")
        return  # Stop further execution

    elif "–æ–±–Ω–æ–≤–∏—Ç—å—Å—è" in user_input:
        user_id = message.from_user.id
        admin_data = db.admins.find_one({"user_id":user_id})

        # Check if the user is authorized
        if not admin_data or admin_data.get("role") != "owner":
            await message.answer("üö´ –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")
            return

        await message.answer("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ.")

        # Pull latest changes from GitHub
        try:
            result = subprocess.run(["git", "pull"], capture_output=True, text=True, check=True)
            git_output = result.stdout
        except subprocess.CalledProcessError as e:
            await message.answer(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å GitHub:\n{e.stderr}")
            return

        await message.answer(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã:\n`\n{git_output}\n`", parse_mode="Markdown")

        # Restart the bot
        if git_output != "Already up to date.":
            try:
                await message.answer("‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...", reply_markup=get_main_keyboard(user_id))
                os.execl(sys.executable, sys.executable, *sys.argv)
            except Exception as e:
                await message.answer(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:\n{e}", reply_markup=get_main_keyboard(user_id))

    elif "–Ω–∞–∑–∞–¥" in user_input:
        await message.answer("üëã", reply_markup=get_main_keyboard(user_id))

    elif "–Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü—É" in user_input:
        await message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏: –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü—É.")
    
    else:
        # Unknown command, ignore or send a generic response
        await message.answer("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –º–µ–Ω—é.")
