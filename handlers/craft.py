from rate_limit import rate_limit
from aiogram import types
from db import db
from handlers.menu import handle_menu

@rate_limit(0.5)
async def craft_all(message: types.Message):

    user_id = message.from_user.id
    user_data = db.users.find_one({"user_id":user_id})

    nickname = user_data.get("nickname", "–ì–æ—Å—Ç—å")
    username = user_data.get("username")

    –æ—Å–∫–æ–ª–∫–∏ = user_data.get("–æ—Å–∫–æ–ª–∫–∏", 0)
    –æ–±—ã—á–Ω—ã–µ = user_data.get("–æ–±—ã—á–Ω—ã–µ", 0)
    —Ä–µ–¥–∫–∏–µ = user_data.get("—Ä–µ–¥–∫–∏–µ", 0)
    —ç–ø–∏—á–µ—Å–∫–∏–µ = user_data.get("—ç–ø–∏—á–µ—Å–∫–∏–µ", 0)

    if message.text.lower().startswith("–∫—Ä–∞—Ñ—Ç –≤—Å—è"):
        parts = message.text.split(maxsplit=2)

        if len(parts) < 3 or len(parts) > 3:

            await message.answer(
                f"‚ÑπÔ∏è [{nickname}](https://t.me/{username}), —á—Ç–æ–±—ã —Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –∫—Ä—É—Ç–∫–∏ —Å—Ä–∞–∑—É –∏–∑ –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, –ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É \"–∫—Ä–∞—Ñ—Ç –≤—Å—è [–æ—Å–∫–æ–ª–∫–∏/–æ–±—ã—á–Ω—ã–µ/—Ä–µ–¥–∫–∏–µ/—ç–ø–∏—á–µ—Å–∫–∏–µ]\". \n\n"
                f"üß§ –ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥:\n"
                f"‚û§ `–ö—Ä–∞—Ñ—Ç –≤—Å—è –æ—Å–∫–æ–ª–∫–∏`\n"
                f"‚û§ `–ö—Ä–∞—Ñ—Ç –≤—Å—è –æ–±—ã—á–Ω—ã–µ`\n"
                f"‚û§ `–ö—Ä–∞—Ñ—Ç –≤—Å—è —Ä–µ–¥–∫–∏–µ`\n"
                f"‚û§ `–ö—Ä–∞—Ñ—Ç –≤—Å—è —ç–ø–∏—á–µ—Å–∫–∏–µ`\n",
                parse_mode="Markdown",
                disable_web_page_preview=True
            )
        
        else: 

            emojis = {
                "–æ—Å–∫–æ–ª–∫–∏": "üÄÑÔ∏è",
                "–æ–±—ã—á–Ω—ã–µ": "‚ö°",
                "—Ä–µ–¥–∫–∏–µ": "‚ú®",
                "—ç–ø–∏—á–µ—Å–∫–∏–µ": "üêâ",
            }

            craft_type = "–ø–æ–≤—Ç–æ—Ä–æ–∫"

            if parts[2] == "–æ—Å–∫–æ–ª–∫–∏": 
                craft_type = "–æ—Å–∫–æ–ª–∫–æ–≤"
                craft = "–æ—Å–∫–æ–ª–∫–∏"
                craft_amount = (–æ—Å–∫–æ–ª–∫–∏//10)*1
            elif parts[2] == "–æ–±—ã—á–Ω—ã–µ":
                craft_amount = (–æ–±—ã—á–Ω—ã–µ//10)*1
                craft = "–æ–±—ã—á–Ω—ã–µ"
            elif parts[2] == "—Ä–µ–¥–∫–∏–µ":
                craft_amount = (—Ä–µ–¥–∫–∏–µ//10)*2
                craft = "—Ä–µ–¥–∫–∏–µ"
            elif parts[2] == "—ç–ø–∏—á–µ—Å–∫–∏–µ":
                craft_amount = (—ç–ø–∏—á–µ—Å–∫–∏–µ//10)*4
                craft = "—ç–ø–∏—á–µ—Å–∫–∏–µ"
            
            else:
                await message.answer(
                    f"‚ÑπÔ∏è [{nickname}](https://t.me/{username}), —á—Ç–æ–±—ã —Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –∫—Ä—É—Ç–∫–∏ —Å—Ä–∞–∑—É –∏–∑ –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, –ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É \"–∫—Ä–∞—Ñ—Ç –≤—Å—è [–æ—Å–∫–æ–ª–∫–∏/–æ–±—ã—á–Ω—ã–µ/—Ä–µ–¥–∫–∏–µ/—ç–ø–∏—á–µ—Å–∫–∏–µ]\". \n\n"
                    f"üß§ –ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥:\n"
                    f"‚û§ `–ö—Ä–∞—Ñ—Ç –≤—Å—è –æ—Å–∫–æ–ª–∫–∏`\n"
                    f"‚û§ `–ö—Ä–∞—Ñ—Ç –≤—Å—è –æ–±—ã—á–Ω—ã–µ`\n"
                    f"‚û§ `–ö—Ä–∞—Ñ—Ç –≤—Å—è —Ä–µ–¥–∫–∏–µ`\n"
                    f"‚û§ `–ö—Ä–∞—Ñ—Ç –≤—Å—è —ç–ø–∏—á–µ—Å–∫–∏–µ`\n",
                    parse_mode="Markdown",
                    disable_web_page_preview=True
                )

            if craft_amount > 0:

                craftable = user_data.get(f"{craft}", 0)

                db.users.update_one(
                    {"user_id": user_id},
                    {"$set":{
                        f"{craft}":craftable-((craftable//10)*10),
                        "spin_chances":user_data.get("spin_chances")+craft_amount
                    }}
                )


                await message.answer(
                    f"‚ôªÔ∏èü•° [{nickname}](https://t.me/{username}), –∫—Ä–∞—Ñ—Ç –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ\n"
                    f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    f"üß± –ü–æ—Ç—Ä–∞—á–µ–Ω–æ {craft_type}: {(craftable//10)*10} {emojis[parts[2]]}\n"
                    f"üåå –ü–æ–ª—É—á–µ–Ω–æ –∫—Ä—É—Ç–æ–∫: {craft_amount} üÉè",
                    parse_mode="Markdown",
                    disable_web_page_preview=True
                )
            else: 
                await message.answer(
                    f"üåÄ [{nickname}](https://t.me/{username}), –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è –∫—Ä–∞—Ñ—Ç–∞.",
                    parse_mode="Markdown",
                    disable_web_page_preview=True
                )

    else: await handle_menu(message)

async def use_craft(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    user_data = db.users.find_one({"user_id":user_id})

    nickname = user_data.get("nickname", "–ì–æ—Å—Ç—å")
    username = user_data.get("username")
    –æ–±—ã—á–Ω—ã–µ = user_data.get("–æ–±—ã—á–Ω—ã–µ", 0)
    —Ä–µ–¥–∫–∏–µ = user_data.get("—Ä–µ–¥–∫–∏–µ", 0)
    —ç–ø–∏—á–µ—Å–∫–∏–µ = user_data.get("—ç–ø–∏—á–µ—Å–∫–∏–µ", 0)
    –æ—Å–∫–æ–ª–∫–∏ = user_data.get("–æ—Å–∫–æ–ª–∫–∏",0)
    spin_chances = user_data.get("spin_chances", 0)
    action = callback_query.data.split("_")[1]

    if not user_data:
        await callback_query.message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    else:
        if action == "casual":
            if –æ–±—ã—á–Ω—ã–µ>=10:
                db.users.update_one({"user_id":user_id},{"$set":{"–æ–±—ã—á–Ω—ã–µ":–æ–±—ã—á–Ω—ã–µ-10,"spin_chances":spin_chances+1}})
                await callback_query.message.answer(
                    f"‚ôªÔ∏èü•° [{nickname}](https://t.me/{username}), –∫—Ä–∞—Ñ—Ç –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ:\n"
                    f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    f"_10 ‚ö°Ô∏è –∫–∞—Ä—Ç ‚û† 1 –ø–æ–ø—ã—Ç–∫–∞_\n",
                    parse_mode="Markdown",
                    disable_web_page_preview=True
                )
            else: 
                await callback_query.answer("üåÄ –¢–µ–±–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–æ–∫", show_alert=True)
            
        elif action == "rare":
            if —Ä–µ–¥–∫–∏–µ>=10:
                db.users.update_one({"user_id":user_id},{"$set":{"—Ä–µ–¥–∫–∏–µ":—Ä–µ–¥–∫–∏–µ-10,"spin_chances":spin_chances+2}})
                await callback_query.message.answer(
                    f"‚ôªÔ∏èü•° [{nickname}](https://t.me/{username}), –∫—Ä–∞—Ñ—Ç –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ:\n"
                    f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    f"_10 ‚ú® –∫–∞—Ä—Ç ‚û† 2 –ø–æ–ø—ã—Ç–∫–∞_\n",
                    parse_mode="Markdown",
                    disable_web_page_preview=True
                )
            else: 
                await callback_query.answer("üåÄ –¢–µ–±–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–æ–∫", show_alert=True)

        elif action == "epic":
            if —ç–ø–∏—á–µ—Å–∫–∏–µ>=10:
                db.users.update_one({"user_id":user_id},{"$set":{"—ç–ø–∏—á–µ—Å–∫–∏–µ":—ç–ø–∏—á–µ—Å–∫–∏–µ-10,"spin_chances":spin_chances+4}})
                await callback_query.message.answer(
                    f"‚ôªÔ∏èü•° [{nickname}](https://t.me/{username}), –∫—Ä–∞—Ñ—Ç –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ:\n"
                    f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    f"_10 üêâ –∫–∞—Ä—Ç ‚û† 4 –ø–æ–ø—ã—Ç–∫–∞_\n",
                    parse_mode="Markdown",
                    disable_web_page_preview=True
                )
            else: 
                await callback_query.answer("üåÄ –¢–µ–±–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–æ–∫", show_alert=True)

        elif action == "osk":
            if –æ—Å–∫–æ–ª–∫–∏>=10:
                db.users.update_one({"user_id":user_id},{"$set":{"–æ—Å–∫–æ–ª–∫–∏":–æ—Å–∫–æ–ª–∫–∏-10,"spin_chances":spin_chances+1}})
                await callback_query.message.answer(
                    f"‚ôªÔ∏èü•° [{nickname}](https://t.me/{username}), –∫—Ä–∞—Ñ—Ç –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ:\n"
                    f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    f"_10 üÄÑÔ∏è –æ—Å–∫–æ–ª–∫–æ–≤ ‚û† 1 –ø–æ–ø—ã—Ç–∫–∞_\n",
                    parse_mode="Markdown",
                    disable_web_page_preview=True
                )
            else: 
                await callback_query.answer("üåÄ –¢–µ–±–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–æ–∫", show_alert=True)
